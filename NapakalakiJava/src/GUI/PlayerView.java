/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.awt.Component;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import napakalaki.*;

/**
 *
 * @author Admin1
 */
public class PlayerView extends javax.swing.JPanel {

    /**
     * Creates new form PlayerView
     */
    Player playerModel;
    Napakalaki napakalakiModel;
    CultistPlayer cPlayerModel;
    
    
    public PlayerView() {
        initComponents();
    }
    
    public void setPlayer(Player p){
        playerModel = p;
        // Incluir instrucciones para actualizar su nombre, nivel, etc.
        jLabelNombre.setText(playerModel.getName());
        jLabelNivel.setText(Integer.toString(playerModel.getLevels()));
        jLabelnCombate.setText(Integer.toString(playerModel.getCombatLevel()));
        playerModel.setEnemy(p);
        jLabelEnemigo.setText(playerModel.getEnemy().getName());
        if(cPlayerModel==null)
            jLabelnSectarios.setText(Integer.toString(0));
        else    
            jLabelnSectarios.setText(Integer.toString(cPlayerModel.getTotalCultistPlayers()));
        // A continuación se actualizan sus tesoros
        this.fillTreasurePanel(visibleTreasures,playerModel.getVisibleTreasures());
        this.fillTreasurePanel(hiddenTreasures,playerModel.getHiddenTreasures());
        if(playerModel.canISteal()){
            jButtonSteal.setEnabled(true);
        }
        else
            jButtonSteal.setEnabled(false);
        
        repaint();
        revalidate();
        
    }
    
    public void setNapakalaki(Napakalaki nueva) {
        napakalakiModel = nueva; 
        repaint(); 
    }
    
    private void fillTreasurePanel (JPanel aPanel, ArrayList<Treasure> aList) {
        // Se elimina la información antigua, si la hubiera
        aPanel.removeAll();
        // Se recorre la lista de tesoros construyendo y añadiendo sus vistas
        // al panel
        for (Treasure t : aList) {
        TreasureView aTreasureView = new TreasureView();
        aTreasureView.setTreasure (t);
        aTreasureView.setVisible (true);
        aPanel.add (aTreasureView);
        }
        // Se fuerza la actualización visual del panel
        aPanel.repaint();
        aPanel.revalidate();
    }   
    
    private ArrayList<Treasure> getSelectedTreasures(JPanel aPanel) {
        // Se recorren los tesoros que contiene el panel,
        // almacenando en un vector aquellos que están seleccionados.
        // Finalmente se devuelve dicho vector.
        TreasureView tv;
        ArrayList<Treasure> output = new ArrayList();
        for (Component c : aPanel.getComponents()) {
        tv = (TreasureView) c;
        if ( tv.isSelected() )
        output.add ( tv.getTreasure() );
        }
        return output;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        NombreJugador = new javax.swing.JLabel();
        NivelJugador = new javax.swing.JLabel();
        NivelCombateJugador = new javax.swing.JLabel();
        NombreEnemigoJugador = new javax.swing.JLabel();
        nSectarios = new javax.swing.JLabel();
        jLabelnSectarios = new javax.swing.JLabel();
        jLabelNombre = new javax.swing.JLabel();
        jLabelNivel = new javax.swing.JLabel();
        jLabelnCombate = new javax.swing.JLabel();
        jLabelEnemigo = new javax.swing.JLabel();
        titulo = new javax.swing.JLabel();
        hiddenTreasures = new javax.swing.JPanel();
        visibleTreasures = new javax.swing.JPanel();
        jButtonVisible = new javax.swing.JButton();
        jButtonSteal = new javax.swing.JButton();
        jButtonDiscardTreasure = new javax.swing.JButton();
        jButtonDiscardAll = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 0, 0));
        setForeground(new java.awt.Color(255, 255, 255));

        NombreJugador.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        NombreJugador.setForeground(new java.awt.Color(255, 255, 255));
        NombreJugador.setText("Nombre:");

        NivelJugador.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        NivelJugador.setForeground(new java.awt.Color(255, 255, 255));
        NivelJugador.setText("Nivel:");

        NivelCombateJugador.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        NivelCombateJugador.setForeground(new java.awt.Color(255, 255, 255));
        NivelCombateJugador.setText("Nivel de Combate:");

        NombreEnemigoJugador.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        NombreEnemigoJugador.setForeground(new java.awt.Color(255, 255, 255));
        NombreEnemigoJugador.setText("Enemigo:");

        nSectarios.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        nSectarios.setForeground(new java.awt.Color(255, 255, 255));
        nSectarios.setText("Numero de Sectarios:");

        jLabelnSectarios.setForeground(new java.awt.Color(255, 255, 255));

        jLabelNombre.setForeground(new java.awt.Color(255, 255, 255));

        jLabelNivel.setForeground(new java.awt.Color(255, 255, 255));

        jLabelnCombate.setForeground(new java.awt.Color(255, 255, 255));

        jLabelEnemigo.setForeground(new java.awt.Color(255, 255, 255));

        titulo.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        titulo.setForeground(new java.awt.Color(255, 255, 255));
        titulo.setText("NAPAKALAKI");

        hiddenTreasures.setBackground(new java.awt.Color(51, 51, 51));
        hiddenTreasures.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tesoros Ocultos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        hiddenTreasures.setForeground(new java.awt.Color(255, 255, 255));
        hiddenTreasures.setPreferredSize(new java.awt.Dimension(637, 150));

        visibleTreasures.setBackground(new java.awt.Color(51, 51, 51));
        visibleTreasures.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tesoros Visibles", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        visibleTreasures.setPreferredSize(new java.awt.Dimension(637, 150));
        visibleTreasures.setRequestFocusEnabled(false);

        jButtonVisible.setBackground(new java.awt.Color(0, 0, 0));
        jButtonVisible.setForeground(new java.awt.Color(255, 255, 255));
        jButtonVisible.setText("Hacer Visible");
        jButtonVisible.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVisibleActionPerformed(evt);
            }
        });

        jButtonSteal.setBackground(new java.awt.Color(0, 0, 0));
        jButtonSteal.setForeground(new java.awt.Color(255, 255, 255));
        jButtonSteal.setText("Robar Tesoro");
        jButtonSteal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonStealActionPerformed(evt);
            }
        });

        jButtonDiscardTreasure.setBackground(new java.awt.Color(0, 0, 0));
        jButtonDiscardTreasure.setForeground(new java.awt.Color(255, 255, 255));
        jButtonDiscardTreasure.setText("Descartar Tesoro");
        jButtonDiscardTreasure.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDiscardTreasureActionPerformed(evt);
            }
        });

        jButtonDiscardAll.setBackground(new java.awt.Color(0, 0, 0));
        jButtonDiscardAll.setForeground(new java.awt.Color(255, 255, 255));
        jButtonDiscardAll.setText("Descartar  Todo");
        jButtonDiscardAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDiscardAllActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(0, 0, 0));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Subir de Nivel");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(NivelJugador)
                                    .addComponent(NivelCombateJugador)
                                    .addComponent(NombreJugador)
                                    .addComponent(NombreEnemigoJugador))
                                .addGap(24, 24, 24))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(nSectarios)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelEnemigo, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabelnSectarios))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabelNivel)
                                    .addComponent(jLabelnCombate))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(titulo)
                                .addGap(26, 26, 26))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonVisible, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonSteal, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonDiscardTreasure, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonDiscardAll, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(hiddenTreasures, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(visibleTreasures, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 580, Short.MAX_VALUE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(NivelCombateJugador))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(NombreJugador)
                            .addComponent(jLabelNombre))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(NivelJugador)
                            .addComponent(jLabelNivel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelnCombate))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(titulo)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nSectarios)
                    .addComponent(jLabelnSectarios))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NombreEnemigoJugador)
                    .addComponent(jLabelEnemigo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(visibleTreasures, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(hiddenTreasures, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonVisible)
                    .addComponent(jButtonSteal)
                    .addComponent(jButtonDiscardTreasure)
                    .addComponent(jButtonDiscardAll)
                    .addComponent(jButton1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonVisibleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVisibleActionPerformed
        ArrayList<Treasure> selHidden = getSelectedTreasures (hiddenTreasures);
        napakalakiModel.makeTreasuresVisible (selHidden);
        setPlayer(napakalakiModel.getCurrentPlayer());
        
    }//GEN-LAST:event_jButtonVisibleActionPerformed

    private void jButtonDiscardAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDiscardAllActionPerformed
        playerModel.discardAllTreasures();
        setPlayer(napakalakiModel.getCurrentPlayer());
        
        jButtonDiscardAll.setEnabled(true);
        jButtonDiscardTreasure.setEnabled(false);
        jButtonVisible.setEnabled(true);
    
    }//GEN-LAST:event_jButtonDiscardAllActionPerformed

    private void jButtonDiscardTreasureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDiscardTreasureActionPerformed
        ArrayList<Treasure> selHTreasures = getSelectedTreasures(hiddenTreasures);
        ArrayList<Treasure> selVTreasures = getSelectedTreasures(visibleTreasures);
        napakalakiModel.discardHiddenTreasures(selHTreasures);
        napakalakiModel.discardVisibleTreasures(selVTreasures);
        setPlayer(napakalakiModel.getCurrentPlayer());
    }//GEN-LAST:event_jButtonDiscardTreasureActionPerformed

    private void jButtonStealActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonStealActionPerformed
        Treasure t = napakalakiModel.getCurrentPlayer().stealTreasure();
        if(t==null){
            jButtonSteal.setEnabled(false);
            JOptionPane.showMessageDialog(null, "No has robado nada");
        }
        else{
            jButtonSteal.setEnabled(false);
            JOptionPane.showMessageDialog(null,"Has conseguido robar algo");
        }
        
        setPlayer(napakalakiModel.getCurrentPlayer());
    }//GEN-LAST:event_jButtonStealActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        ArrayList<Treasure> sel1 = getSelectedTreasures(hiddenTreasures);
        ArrayList<Treasure> sel2 = getSelectedTreasures(visibleTreasures);
        if(sel1.size()==2)
            playerModel.subirDeNivel(sel1.get(0), sel1.get(1), playerModel.combat(napakalakiModel.getCurrentMonster()));
        else if(sel1.size()==1&&sel2.size()==1)
            playerModel.subirDeNivel(sel1.get(0), sel2.get(0), playerModel.combat(napakalakiModel.getCurrentMonster()));
        else if(sel2.size()==2)
                playerModel.subirDeNivel(sel2.get(0), sel2.get(1), playerModel.combat(napakalakiModel.getCurrentMonster()));
        else
            JOptionPane.showMessageDialog(null, "No has seleccionado bien los tesoros");
        
        repaint();
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel NivelCombateJugador;
    private javax.swing.JLabel NivelJugador;
    private javax.swing.JLabel NombreEnemigoJugador;
    private javax.swing.JLabel NombreJugador;
    private javax.swing.JPanel hiddenTreasures;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonDiscardAll;
    private javax.swing.JButton jButtonDiscardTreasure;
    private javax.swing.JButton jButtonSteal;
    private javax.swing.JButton jButtonVisible;
    private javax.swing.JLabel jLabelEnemigo;
    private javax.swing.JLabel jLabelNivel;
    private javax.swing.JLabel jLabelNombre;
    private javax.swing.JLabel jLabelnCombate;
    private javax.swing.JLabel jLabelnSectarios;
    private javax.swing.JLabel nSectarios;
    private javax.swing.JLabel titulo;
    private javax.swing.JPanel visibleTreasures;
    // End of variables declaration//GEN-END:variables
}
